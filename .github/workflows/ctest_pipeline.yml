name: ctest_pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        dependency_loader: [fetch_content, vcpkg]
        build_type: [debug, release]

    steps:
    - name: install deps
      run: |
        sudo apt-get update -y
        sudo apt-get install -y software-properties-common 
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        sudo apt-get install -y gcc-11 g++-11 clang-14 libclang-cpp14-dev libclang-14-dev ninja-build
        sudo apt-get install curl zip unzip tar pkg-config python3.10-venv flex bison

    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'
      
    - name: Restore artifacts, or setup vcpkg (do not install any package)
      uses: lukka/run-vcpkg@v10
      with:
        vcpkgDirectory: '${{ github.workspace }}/vendor/vcpkg'

    - name: Run CMake consuming CMakePreset.json and vcpkg.json by mean of vcpkg.
      uses: lukka/run-cmake@v10
      with:
        cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
        configurePreset: '${{ matrix.dependency_loader }}-${{ matrix.build_type }}'
        buildPreset: '${{ matrix.dependency_loader }}-${{ matrix.build_type }}'
        testPreset: '${{ matrix.dependency_loader }}-${{ matrix.build_type }}'